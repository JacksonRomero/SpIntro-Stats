{
    "contents" : "Stat 408 Assignment 2-3 \n================================\n**Solutions Spring 2014**\n\n1. Use R to plot a map of Montana.  \n  a. Label each county.   \n    ```{r, fig.height=6,fig.width=8,out.width='400px'}\n      require(knitr)\n      require(maps)\n      map.text(\"county\",\"montana\")\n    ```\n  b.  Use the 2012  data on winter wheat yields (tab separated). \n  Give a summary and a histogram of the yields.   \n    ```{r,fig.height=4,out.width='300px'}\n      wheat <- read.csv(\"http://www.math.montana.edu/~jimrc/classes/stat408/data/fixedWinterWheat.txt\",sep=\"\\t\")\n       summary(wheat$YieldperAcre)\n       hist(wheat$YieldperAcre)\n    ```\n    \n   Identify the five counties with highest yield per acre.  \n  ```{r}\n      subset(wheat, YieldperAcre>45.5)\n  ```      \n  *Highest yields are in Flathead, Valley, Daniels, Glacier, and Phillips counties.*  \n  \n  Compute total bushels harvested. Which counties produce the most winter wheat?\n  ```{r,fig.height=4,out.width='300px'}\n      wheat$TotalYield <- wheat$HarvestedAcres * wheat$YieldperAcre/1000\n      hist(wheat$TotalYield)\n      subset(wheat, TotalYield > 3900)\n  ```\n  *Counties with highest total wheat producion are Choteau, Hill, Fergus, Cascade, and Bg Horn.*  \n\tCompute the proportion of planted acres which were harvested for each  county.  Which 2 counties had the highest proportions?  \n  ```{r,fig.height=4,out.width='300px'}\n      wheat$propHarvested <- wheat$HarvestedAcres / wheat$PlantedAcres\n      hist(wheat$propHarvested)\n      subset(wheat, propHarvested > .99,select=c(1:3,6))\n  ```\n  *Daniels and Treasure counties harvested 100% of the planted acres.*   \n  Which 2 had the lowest proportion?   \n  ```{r}\n      subset(wheat, propHarvested <.81 & complete.cases(wheat),select=c(1:3,6))\n  ```\n  *Carter and Lewis and Clark counties had lowest proportions harvested.*  \n      \n  c. Use the cut function in R to split yield per acre into some nice categories (zero, NA should be it's own category). Use the\tcategories to create a fill color for each county and color in\tyour map.  Use a color scheme suited to this type of data. \n\t  To give space for the legend (yes, we need a legend), adjust\tthe y limits with something like \n         `ylim=c(44.3,50)`  inside `map()`.\n  ```{r,fig.width=10,fig.height=6, out.width='400px'}  \n     yieldCut <- cut(wheat$YieldperAcre, 1:8*10)\n     require(RColorBrewer)\n     palette(brewer.pal(n=8,name=\"YlGn\"))\n     ## or \n     # require(colorspace)\n     ##myPal <- rev(choose_palette()(8))\n     # myPal <- rev(c(\"#086D30\", \"#23753C\", \"#367D49\",   \"#478757\", \"#5A9267\", \"#6FA07A\", \"#8CB494\", \"#E6F4E9\"))\n     # palette(myPal)\n     map(\"county\",\"montana\", fill=TRUE,col=as.numeric(yieldCut), ylim=c(44.3,50.6))\n     map.text(\"county\",\"montana\", add=TRUE)\n     title(\"Winter Wheat Yield Per Acre\")\n     legend(\"top\", ncol=4, levels(yieldCut), fill=1:8)\n  ```\n  d. Repeat for acres harvested.\n  ```{r, fig.width=10,fig.height=6, out.width='400px'}  \n     hacresCut <- cut(wheat$HarvestedAcres/1000, c(0,3,10,30,100,300,1000))\n     palette(brewer.pal(n=8,name=\"YlGn\"))\n     ## or \n     # require(colorspace)\n     ##myPal <- rev(choose_palette()(8))\n     # myPal <- rev(c(\"#086D30\", \"#23753C\", \"#367D49\",   \"#478757\", \"#5A9267\", \"#6FA07A\", \"#8CB494\", \"#E6F4E9\"))\n     # palette(myPal)\n     map(\"county\",\"montana\", fill=TRUE,col=as.numeric(hacresCut), xlim=c(-118,-100))\n     map.text(\"county\",\"montana\", add=TRUE)\n     title(\"Harvested Acres in 1000s\")\n     legend(\"bottomleft\", ncol=1, c(\"NA\",levels(hacresCut)), fill=0:8)\n  ```\n  \n  e. Compare your maps the ones at the NASS site. Which states have higher\tyielding winter wheat counties?  More acres planted?  \n    *Higher yields per acre occur where there is irrigation or more moisture:  Idaho, Oregon, Washington, California, and a few spots out east. Higher planted acres depends, of course, on size of a county, and occurs in eastern Washington, and in/around Kansas.*  \n     \n2. Have R plot a map of the lower 48 states and fill each\n      state with a color selected to show which party the state's senators belong to. (Recall: each state has two senators, They could both be Democrats, both Republicans, or one of each. There are also two independents from ME and VT. Some people count them as Democrats since they caucus with the Democrats, but I want you to show them differently than a plain Democrat.)  \n      <a href=\"../data/senators2014.csv\"> Here is  a comma-separated list</a> of Senators and their parties.  You can set the fill values with some ifelse statements, or use  matrix multiplication as in \n   ```\n   partyCnt <- table(senate$state, senate$party) %*%  0:2\n   ```\n  If you do this, please explain which fill values we get for a   state with 1 or 2 Dem's, 1 or 2 Rep's and 0 or 1 Indep.   \n  Another hassle for this data is that I gave you abbreviations in the   senate file, and the maps state data has full state names.  Use  matching and the built in state variables as in \n     ```\n\t   state.number <- match(rownames(partyCnt), state.abb)\n\t   state.name[state.number]\n     ```\n  To make our maps different, I forbid the use of Red for Republicans, Blue for Democrats.  Choose an appropriate palette  and justify your choice using arguments   from       class notes of Feb 21.\n      ```{r, senateMap, fig.width=9, fig.keep='last',out.width='600px' }\n senate <- read.csv(\"senators2014.csv\")\n senate2 <- data.frame( split =with(senate,tapply(as.numeric(party),state,sum)) - 1)\n senate2$state.abb <- names(senate2[[1]])\n rownames(senate2) <- NULL\n \n snames <-  map.text('state')$names\n  ## problem: there are 63 polygons in the map file.\n  ## each island has a separate entry which includes state:island\n islands <- snames[grep(\":\",snames)]\n  ## find the oddballs and split off their state names before the \":\"\n islands <-  sapply( islands, function(x) unlist(strsplit(x,\":\"))[1])\n names(islands) <- NULL\n  snames[grep(\":\",snames)] <-   islands  ## feed them back in\n  ## next, grab the lower case state names for matching by state.abb\n  lnames <- tolower(state.name[order(state.abb)])\n  myparty <- senate2$split[match(snames,lnames)]\n  palette(brewer.pal(5,\"PuOr\"))\n  map('state', fill=T, col=myparty, mar = rep(c(.6,.1),c(3,1)),myborder=c(.2,.2), ylim = c(26,49.2))\n  title(\"Senate Party Representation of States\\n\")\n legend(\"top\",ncol=5,fill= 1:5, c(\"2-Dem\",\"1 Dem, 1 Ind\",\"1 Dem 1 Rep\",\"1 Rep 1 Ind\",\"2-Rep\"))\n```\n  *I chose Purple to Orange palette from ColorBrewer because this is a case where we need a diverging palette. The evenly split states show up as white, and Vermont leans Dem with 1-D, 1-Indep while Maine leans toward the purple republicans.*",
    "created" : 1426602841057.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2003046715",
    "id" : "5DB80F7C",
    "lastKnownWriteTime" : 1395004486,
    "path" : "~/classes/stat408/homework/assn2.3/assn2-3_sltnsS14.Rmd",
    "project_path" : null,
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_markdown"
}