{
    "contents" : "## server.R  for power demo\nlibrary(shiny)\n\n# Define server logic for slider examples\nshinyServer(function(input, output) {\n  \n  # Reactive expression to compose a data frame containing all of the values\n  sliderValues <- reactive({\n    \n    # Compose data frame\n    data.frame(\n      Setting = c(\"Sample Size\", \n               \"Standard Deviation\",\n               \"Shift in Mean\"),\n      Value = as.character(c(input$n, \n                             input$sd,\n                             input$altMean)),\n      Name = c( \"Significance Level (alpha)\",\n                                     \"Effect Size\",  \"Power\"\n                           ),\n      Output =as.character(c(input$alpha, round(input$altMean/input$sd,3),\n                round(\n             power.t.test(n=input$n, delta=input$altMean,\n                          sd=input$sd, sig.level=input$alpha,\n                          type=\"one.sample\",\n                          alternative=\"one\")$power,3))), \n      stringsAsFactors=FALSE)\n  }) \n  grn <- rgb(0,1,0,alpha=.4)\n  rd <- rgb(1,0,0,alpha=.5)\n  output$powerPlot <- renderPlot({\n    x <- seq(-4,10,length=200)\n    plot(x, dt(x, input$n-1),bty='l', type=\"l\", xlab=\"\",ylab=\"\")\n    lines(x,dt(x,input$n-1,ncp=input$altMean/input$sd *sqrt(input$n)))\n    abline(h=0)\n    abline(v=c(0, input$altMean))\n    qt1 <- qt(1-input$alpha, input$n-1)\n    xrr <- c(qt1, qt1, x[x>=qt1],max(x))\n    yrr <- c(0, dt(c(qt1,  x[x>=qt1]), input$n -1),0)\n    polygon(xrr,yrr, col = rd)\n    abline(v = qt1)\n    xpwr <- c(qt1,x[x>=qt1])\n    ypwr <- c(0, dt(xpwr,df=input$n-1, ncp=input$altMean/input$sd *sqrt(input$n) ),0)\n    xpwr <- c(qt1, xpwr, max(x))\n    ##cat(length(xpwr), length(ypwr))\n    polygon(xpwr,ypwr, col = grn)\n    text(weighted.mean(xrr,w=yrr^2),weighted.mean(yrr,w=yrr^.5),cex=1.5, expression(alpha))\n    text(weighted.mean(xpwr,w=ypwr^4),weighted.mean(ypwr,w=ypwr^.5),cex=1.5,\"Power\")\n    mtext(side=1,at=0,line=2, expression(H[0]: mu == 0))\n    mtext(side=1,at=input$altMean,line=2, expression(H[a]: mu > 0))\n  })\n\n  # Show the values using an HTML table\n  output$values <- renderTable({\n    sliderValues()\n  })\n})\n\n",
    "created" : 1426005511780.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "570862777",
    "id" : "7DE0B156",
    "lastKnownWriteTime" : 1380061661,
    "path" : "~/consult/spinners/powerDemo/server.R",
    "project_path" : "server.R",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}